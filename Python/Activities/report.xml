<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="5" skipped="0" tests="21" time="0.229" timestamp="2022-01-11T13:24:34.204572" hostname="LAPTOP-VVIFGRE1"><testcase classname="Activity21_test" name="testSum" time="0.001" /><testcase classname="Activity21_test" name="testDiff" time="0.001" /><testcase classname="Activity21_test" name="testMul" time="0.001" /><testcase classname="Activity21_test" name="testDiv" time="0.001"><failure message="assert (90 / 9) &lt; 10">def testDiv():
        n1=90
        n2=9
&gt;       assert n1/n2&lt;10
E       assert (90 / 9) &lt; 10

Activity21_test.py:21: AssertionError</failure></testcase><testcase classname="Activity22_test" name="testSum" time="0.001" /><testcase classname="Activity22_test" name="testDiff" time="0.000" /><testcase classname="Activity22_test" name="testMul" time="0.000" /><testcase classname="Activity22_test" name="testDiv" time="0.000" /><testcase classname="Activity22_test" name="testNum" time="0.001"><failure message="assert 90 == 9">@pytest.mark.others
    def testNum():
        n1=90
        n2=9
&gt;       assert n1==n2
E       assert 90 == 9

Activity22_test.py:31: AssertionError</failure></testcase><testcase classname="Activity23_test" name="testAddListElements" time="0.001" /><testcase classname="Activity24_test" name="testMyWallet[30-10-20]" time="0.002" /><testcase classname="Activity24_test" name="testMyWallet[20-2-18]" time="0.003" /><testcase classname="Test.newFile_test" name="testsqrttest" time="0.001"><failure message="assert 5.0 == 58&#10; +  where 5.0 = &lt;built-in function sqrt&gt;(25)&#10; +    where &lt;built-in function sqrt&gt; = math.sqrt">def testsqrttest():
        num=25
&gt;       assert math.sqrt(num) ==58
E       assert 5.0 == 58
E        +  where 5.0 = &lt;built-in function sqrt&gt;(25)
E        +    where &lt;built-in function sqrt&gt; = math.sqrt

Test\newFile_test.py:6: AssertionError</failure></testcase><testcase classname="Test.newFile_test" name="testMulaga" time="0.002" /><testcase classname="Test.newFile_test" name="testAgain" time="0.001"><failure message="assert 7 == 8">def testAgain():
&gt;       assert 7==8
E       assert 7 == 8

Test\newFile_test.py:12: AssertionError</failure></testcase><testcase classname="Test.test_MultiplicationParameterization" name="testMul[4-4]" time="0.001" /><testcase classname="Test.test_MultiplicationParameterization" name="testMul[1-5]" time="0.001" /><testcase classname="Test.test_MultiplicationParameterization" name="testMul[56-78]" time="0.001" /><testcase classname="Test.test_MultiplicationParameterization" name="testMul[2-2]" time="0.002"><failure message="assert (2 * 2) != 4">n1 = 2, n2 = 2

    @pytest.mark.parametrize("n1,n2",[(4,4),(1,5),(56,78),(2,2)])
    def testMul(n1,n2):
        # n1=25
        # n2=5
&gt;       assert n1*n2!=4
E       assert (2 * 2) != 4

Test\test_MultiplicationParameterization.py:7: AssertionError</failure></testcase><testcase classname="Test.test_XfailSkip" name="testMyWallet[30-10-20]" time="0.002" /><testcase classname="Test.test_XfailSkip" name="testMyWallet[20-2-18]" time="0.002" /></testsuite></testsuites>